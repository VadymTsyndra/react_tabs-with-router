{"version":3,"sources":["TabsPage.tsx","App.tsx","index.tsx"],"names":["TabsPage","tabs","selectedTabId","useParams","tabId","className","map","tab","classNames","id","to","title","content","getLinkClass","isActive","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAQaA,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGnCC,EAFYC,cAAVC,MAIR,OACE,qCACE,oBAAIC,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,mCACE,oBACE,UAAQ,MACRF,UACEG,IAAW,CAAE,YAAaD,EAAIE,KAAOP,IAHzC,SAME,cAAC,IAAD,CAAMQ,GAAE,gBAAWH,EAAIE,IAAvB,SAA8BF,EAAII,mBAO3CV,EAAKK,KAAI,SAAAC,GAAG,OACXA,EAAIE,KAAOP,GACT,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGE,EAAIK,cAKTV,GACA,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,qCC/BFJ,EAAO,CACX,CAAEQ,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAGpCC,EAAe,SAAC,GAAD,IACjBC,EADiB,EACjBA,SADiB,OAEhBN,IAAW,cAAe,CAC7B,YAAaM,KAGFC,EAAM,kBACjB,qCAEE,qBACEV,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASK,GAAG,IAAIL,UAAWQ,EAA3B,kBACA,cAAC,IAAD,CAASH,GAAG,QAAQL,UAAWQ,EAA/B,yBAKN,qBAAKR,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,KAAK,IAAIC,QAAS,oBAAIZ,UAAU,QAAd,yBAEzB,eAAC,IAAD,CAAOW,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUhB,KAAMA,MACtC,cAAC,IAAD,CAAOe,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUhB,KAAMA,SAGhD,cAAC,IAAD,CAAOe,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUP,GAAG,QAEzC,cAAC,IAAD,CACEM,KAAK,IACLC,QAAS,oBAAIZ,UAAU,QAAd,yCCjDrBc,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d227e9b6.chunk.js","sourcesContent":["import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from './types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const TabsPage:React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  const selectedTabId = tabId;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <>\n              <li\n                data-cy=\"Tab\"\n                className={\n                  classNames({ 'is-active': tab.id === selectedTabId })\n                }\n              >\n                <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n              </li>\n            </>\n          ))}\n        </ul>\n      </div>\n\n      {tabs.map(tab => (\n        tab.id === selectedTabId && (\n          <div className=\"block\" data-cy=\"TabContent\">\n            {tab.content}\n          </div>\n        )\n      ))}\n\n      {!selectedTabId && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      )}\n    </>\n  );\n};\n","import {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TabsPage } from './TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'is-active': isActive,\n});\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n          <NavLink to=\"/tabs\" className={getLinkClass}>Tabs</NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n\n          <Route path=\"/tabs\">\n            <Route index element={<TabsPage tabs={tabs} />} />\n            <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n          </Route>\n\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}